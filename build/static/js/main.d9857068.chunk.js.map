{"version":3,"sources":["axios.js","reducer/reducer.js","Auxiliar/deleteItem.js","components/ItemList.js","components/InpuField.js","pages/AddNewItemPage.js","App.js","Auxiliar/objToArr.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","store","createStore","state","action","type","data","console","log","activePages","initRefresh","window","__REDUX_DEVTOOLS_EXTENSION__","deleteData","id","deleteUrl","firebase","storage","refFromURL","delete","then","catch","error","res","dispatch","ItemList","useSelector","map","el","imgURL","img","key","className","src","alt","brand","description","size","join","price","onClick","deleteItem","InpuField","value","setValue","eventTargetFilter","label","htmlFor","toLowerCase","onChange","e","AddNewItemPage","useState","setBrand","setDescription","gender","setGender","setPrice","setType","setSize","imgUrl","setImgUrl","styleFlag","setStyleFlag","useDispatch","imgRef","useRef","event","hook","target","useEffect","current","file","files","uploadTask","ref","child","name","put","on","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","uploadIMGFile","clothesSize","split","typeClothes","isAdded","post","alert","App","firebaseConfig","useMemo","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","get","response","resArr","obj","resultArr","Object","keys","forEach","element","objToArray","activeClassName","to","exact","from","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d9857068.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://train-39df7.firebaseio.com\"\r\n})\r\n\r\nexport default instance;","import { createStore } from \"redux\";\r\n\r\n\r\nfunction reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case \"SET-DATA\":\r\n        let data=  action.data \r\n        console.log(data)\r\n      return {activePages:data};\r\n    case \"REFRESH\":\r\n      //console.log(\"refreshed\")\r\n        let initRefresh= action.initRefresh \r\n      return {...state,initRefresh:initRefresh};\r\n      default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nlet store = createStore(reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import axios from \"../axios\";\r\nimport store from \"../reducer/reducer\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nfunction deleteData(id, deleteUrl) {\r\n  if (deleteUrl) {\r\n    console.log(\"run\")\r\n    const storage = firebase.storage();\r\n    storage\r\n      .refFromURL(deleteUrl)\r\n      .delete()\r\n      .then(function () {\r\n        // File deleted successfully\r\n        console.log(\"// File deleted successfully\");\r\n      })\r\n      .catch(function (error) {\r\n        // Uh-oh, an error occurred!\r\n      });\r\n  }\r\n  if (id) {\r\n    axios\r\n      .delete(\"/data/\" + id + \".json\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        store.dispatch({ type: \"REFRESH\", initRefresh: [] });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default deleteData;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport deleteItem from \"../Auxiliar/deleteItem\"\r\n\r\nexport default function ItemList() {\r\n    let data = useSelector(state=>state.activePages)\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.map((el) => {\r\n            let id = el.id\r\n            let imgURL = el.img\r\n\r\n          return (\r\n            <ul key={id} className=\"product-card\">\r\n              <li className =\"product-card-foto\">\r\n                <img src={el.img} alt=\"clothes-foto\" />\r\n              </li>\r\n              <span className=\"content-wrapper\">\r\n              <li>\r\n                <p className=\"product-card-brand\">{el.brand}</p>\r\n              </li>\r\n              <li>\r\n                <p className=\"product-card-description\">{el.description}</p>\r\n              </li>\r\n              <li>\r\n                <p className=\"product-card-type\">{el.type}</p>\r\n              </li>\r\n              <li>\r\n                <p className=\"product-card-type\">{el.size.join(\",\")}</p>\r\n              </li>\r\n              <li className=\"product-card-info\">\r\n                <p>{el.price} $</p>{\" \"}\r\n                  <button onClick={()=>deleteItem(id,imgURL)} className=\"product-card-brand\">DELETE ITEM</button>\r\n              </li>\r\n              </span>\r\n            </ul>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InpuField({value,setValue,eventTargetFilter,label}) {\r\n  return (\r\n    <>\r\n      <label htmlFor={label.toLowerCase()}>{label} :</label>\r\n      <input\r\n        type=\"text\"\r\n        id={label.toLowerCase()}\r\n        value={value}\r\n        onChange={(e) => eventTargetFilter(e, setValue)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect,useRef } from \"react\";\r\nimport axios from \"../axios\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InpuField from \"../components/InpuField\";\r\nimport deleteItem from '../Auxiliar/deleteItem';\r\n\r\nexport default function AddNewItemPage() {\r\n  let [brand, setBrand] = useState(\"\");\r\n  let [description, setDescription] = useState(\"\");\r\n  let [gender, setGender] = useState(\"\");\r\n  let [price, setPrice] = useState(\"\");\r\n  let [type, setType] = useState(\"\");\r\n  let [size, setSize] = useState(\"\");\r\n  let [imgUrl, setImgUrl] = useState(false);\r\n  let [styleFlag, setStyleFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  let imgRef = useRef(null)\r\n\r\n  function uploadIMGFile(e) {\r\n    let file = e.target.files[0];\r\n\r\n    var storage = firebase.storage();\r\n\r\n    var storageRef = storage.ref();\r\n\r\n    var uploadTask = storageRef.child(\"images/\" + file.name).put(file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      function (snapshot) {\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n        switch (snapshot.state) {\r\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case firebase.storage.TaskState.RUNNING: // or 'running'\r\n            console.log(\"Upload is running\");\r\n            setStyleFlag(true);\r\n            break;\r\n          default:\r\n            console.log(\"Default case\");\r\n            break;\r\n        }\r\n      },\r\n      function (error) {},\r\n      function () {\r\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n          setStyleFlag(false);\r\n          setImgUrl(downloadURL);\r\n          imgRef.current = downloadURL\r\n          console.log(\"File available at\", downloadURL);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  function eventTargetFilter(event, hook) {\r\n    let val = event.target.value;\r\n    hook(val);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(imgRef.current)\r\n      if (imgRef.current){\r\n        deleteItem(null,imgRef.current)\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  function sendToServerHandler() {\r\n    if (brand && description && gender && price && type && imgUrl) {\r\n      let clothesSize = size.split(\",\")\r\n      let data = {\r\n        brand: brand,\r\n        description: description,\r\n        gender: gender,\r\n        price: price,\r\n        typeClothes: type,\r\n        img: imgUrl,\r\n        isAdded:false,\r\n        size:clothesSize,\r\n      };\r\n      setImgUrl(\"\");\r\n      setPrice(\"\");\r\n      setType(\"\");\r\n      setGender(\"\");\r\n      setDescription(\"\");\r\n      setBrand(\"\");\r\n      setSize(\"\");\r\n      imgRef.current=null;\r\n      axios\r\n        .post(\"/data.json\", data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          alert(\"Item published\");\r\n          dispatch({ type: \"REFRESH\", initRefresh: [] });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      alert(\"Fill in all fields!\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"add-item-wrapper\">\r\n      <InpuField\r\n        label={\"Brand\"}\r\n        value={brand}\r\n        setValue={setBrand}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <InpuField\r\n        label={\"Description\"}\r\n        value={description}\r\n        setValue={setDescription}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <InpuField\r\n        label={\"Gender\"}\r\n        value={gender}\r\n        setValue={setGender}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <InpuField\r\n        label={\"Price\"}\r\n        value={price}\r\n        setValue={setPrice}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <InpuField\r\n        label={\"Type\"}\r\n        value={type}\r\n        setValue={setType}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <InpuField\r\n        label={\"Sizes\"}\r\n        value={size}\r\n        setValue={setSize}\r\n        eventTargetFilter={eventTargetFilter}\r\n      />\r\n\r\n      <label htmlFor=\"image-upload\">Foto of item :</label>\r\n      <input type=\"file\" id=\"image-upload\" onChange={(e) => uploadIMGFile(e)} />\r\n\r\n      {imgUrl && <div className=\"checkmark\"></div>}\r\n      <div className={styleFlag ? \"lds-roller\" : \"\"}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <button onClick={sendToServerHandler}>SEND TO SERVER</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\nimport axios from \"./axios\";\nimport \"./App.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport { BrowserRouter as Router, Switch, Route,Redirect, NavLink } from \"react-router-dom\";\nimport ItemList from \"./components/ItemList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport objToArray from \"./Auxiliar/objToArr\";\nimport AddNewPostPage from \"./pages/AddNewItemPage\";\n\nfunction App() {\n  console.log(\"render\");\n  const dispatch = useDispatch();\n  let initRefresh = useSelector((state) => state.initRefresh);\n\n  const firebaseConfig = useMemo(\n    () => ({\n      apiKey: \"AIzaSyBVwgTuqBBxIn-__3LU8vOPMCw0iCE1oU0\",\n      authDomain: \"train-39df7.firebaseapp.com\",\n      databaseURL: \"https://train-39df7.firebaseio.com\",\n      projectId: \"train-39df7\",\n      storageBucket: \"train-39df7.appspot.com\",\n      messagingSenderId: \"356224743225\",\n      appId: \"1:356224743225:web:af9407f63996673d2d5ae8\",\n    }),\n    []\n  );\n  // Initialize Firebase\n\n  useEffect(() => {\n    firebase.initializeApp(firebaseConfig);\n  }, [firebaseConfig]);\n\n  useEffect(() => {\n    axios\n      .get(\"/data.json\")\n      .then(function (response) {\n        // handle success\n        let resArr = objToArray(response.data);\n        dispatch({ type: \"SET-DATA\", data: resArr });\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [dispatch, initRefresh]);\n\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n        <ul className=\"nav-menu\">\n          <li>\n            <NavLink activeClassName=\"selected\" to=\"/create-new-item\">Add new item</NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName=\"selected\" to=\"/active-items\">Active items</NavLink>\n          </li>\n        </ul>\n\n        <Switch>\n          <Redirect exact   from='/' to='/active-items' />\n          <Redirect    from='//' to='/' />>\n          <Route exact path=\"/create-new-item\">\n            <AddNewPostPage />\n          </Route>\n          <Route exact path=\"/active-items\">\n            <ItemList />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport default   function objToArray (obj){\r\n    let resultArr = []\r\n    Object.keys(obj).forEach(key=>{\r\n      let element = {...obj[key],id:key}\r\n      resultArr=[...resultArr,element]\r\n    })\r\n    return resultArr\r\n  }\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './reducer/reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}